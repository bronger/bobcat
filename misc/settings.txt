>>> from settings import *
>>> settings["General.verbose"] = True
>>> settings.set_default("General.verbose", None, "bool")
>>> settings.close_section("General")
>>> settings.set_default("scaling", 100.0)
>>> settings.close_section("")
>>> settings.set_default("width", None, "float")
Traceback (most recent call last):
    ...
SettingUnknownKeyError: setting 'width = None': unknown setting key; section already closed
>>> read_files = settings.load_from_files("../misc/test.conf")
Traceback (most recent call last):
    ...
SettingWarning: setting 'Paths.backends' misses predefined variable 'rootdir'
>>> settings.set_predefined_variable("rootdir", "~/src/bobcat/")
>>> read_files = settings.load_from_files("../misc/test.conf")
Traceback (most recent call last):
    ...
SettingWarning: file "../misc/test.conf": setting 'General.quiet = true': unknown setting key; section already closed
>>> settings["General.verbose"] = False
>>> settings.set_default("quiet.", "true")
Traceback (most recent call last):
    ...
AssertionError: invalid setting 'quiet.', either section or option is empty
>>> settings.set_default(".quiet", "true")
Traceback (most recent call last):
    ...
AssertionError: invalid setting '.quiet', either section or option is empty
>>> settings = SettingsDict()
>>> settings.set_predefined_variable("rootdir", "~/src/bobcat/")
>>> settings.set_default("General.quiet", True)
>>> read_files = settings.load_from_files("../misc/test.conf")
>>> settings["General.quieT"]
Traceback (most recent call last):
    ...
KeyError: 'General.quieT'
>>> settings["general.quiet"]
Traceback (most recent call last):
    ...
KeyError: 'general.quiet'
>>> settings["General.outfile"] = "/dev/null"
>>> settings.set_default("General.quiet", "off")
Traceback (most recent call last):
    ...
AssertionError: setting 'General.quiet' has already a default value (True)
>>> settings.set_predefined_variable("rootdir", "~/src/gummi/")
Traceback (most recent call last):
    ...
AssertionError: predefined variable 'rootdir' is already set to value '~/src/bobcat/'
>>> settings.set_default("General.Quiet", "")
>>> read_files = settings.load_from_files(["../misc/test.conf", "../misc/test2.conf"])
>>> settings["General.quiet"]
True
>>> read_files = settings.load_from_files("../misc/test3.conf")
>>> settings.set_default("General.a_switch", "on")
>>> read_files = settings.load_from_files("../misc/test4.conf")
Traceback (most recent call last):
    ...
SettingWarning: setting 'General.not.allowed' contains a dot in the option part; it was ignored
>>> warnings.resetwarnings()
>>> warnings.simplefilter("ignore")
>>> read_files = settings.load_from_files("../misc/test3.conf")
>>> settings["General.quiet"]
False
>>> #
>>> #  Now test SettingsDict.parse_keyvalue_list
>>> #
>>> import parser
>>> excerpt = preprocessor.Excerpt("a:b, c = 4, d.f=3", "PRE", "myfile.rsl", {}, {})
>>> settings = SettingsDict()
>>> settings.set_default("a", None, "unicode")
>>> settings.set_default("c", None, "int")
>>> settings.close_section("")
>>> settings.inhibit_new_sections()
>>> settings.parse_keyvalue_list(excerpt, parser.Node(None))
>>> common.ParseError.parse_errors
[ParseError("unknown key 'd.f'",)]
>>> excerpt = preprocessor.Excerpt("a:b, c = 4,e", "PRE", "myfile.rsl", {}, {})
>>> settings.parse_keyvalue_list(excerpt, parser.Node(None))
>>> for error in common.ParseError.parse_errors: print error
file "myfile.rsl", line 1, column 12: unknown key 'd.f'
file "myfile.rsl", line 1, column 11: invalid key--value syntax in 'e'
